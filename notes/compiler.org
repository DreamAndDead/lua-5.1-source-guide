#+SETUPFILE: setup.org

* TODO compiler

类比
- opcode -> 机器码
- vm -> 机器

将 lua 的执行过程分为编译时和运行时

考虑编译的过程

传统是 source -> token -> ast -> ir -> ... -> bytecode

lua 为了效率，直接从 source -> token -> bytecode

由 lexer 和 parser 完成


同时使用流式的处理方式，如果使用多趟式的处理过程，则需要一次完整的遍历
token 数组，交给 parser

lua 使用了流式的处理过程，提供核心的方法，next，供 parser 按需使用
核心使用的便是 lexstate

lua 中的 parse 过程使用 lazy 加载 token 的方式
按需加载 token

相应代码不是那么容易阅读
需要一些编译原理的了解



