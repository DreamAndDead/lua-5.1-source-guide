#+SETUPFILE: setup.org

* overview

** TODO intro

- 本书目标
  - source reading guide
- 章节规划
  - 逻辑关系的模块顺序
  - 只讲核心部分，2 8 原则，只讲 2
  - 图解关键数据结构，及实现过程（从 macro 到 micro，图解是重要的连接点）
  - 对照代码片段
  - 代码阅读任务
- 针对读者
  - lua user
  - c
  - linux

** TODO big picture
   :LOGBOOK:
   - Note taken on [2020-12-03 四 09:57] \\
     lua api name convenience. lua*_ for outside, static for inside
     every module, outside method in h file, inside method in c file
   - Note taken on [2020-12-02 三 17:39] \\
     talk about lua state and global state
     state scope and graph them
   :END:

- from sample code to result
- graph whole process
- big picture of internal

把编程语言也看作一个程序，接收源码字符串，并实现约定描述的功能

the final step




** TODO how to read source

- known the language before
- favorite editor/ide
- compile with debug info
- scan from feature to feature


|prefix|module|
|:-:|:-:|
|luaX|lex|
|luaK|code|


*** project itself

- lua source itself
- where I modified the source code
- some tool to help


CFLAGS -> -ggdb3 -O0  (debug macros)



makefile -m32

chunkspy, add is_vararg

#+begin_src diff
+    BriefLine(string.format("; %d upvalues, %d params, %d is_vararg, %d stacks",
+      func.nups, func.numparams, func.is_vararg, func.maxstacksize))
#+end_src



*** insight

- gcc
- gdb
- gdb script
- how to step

