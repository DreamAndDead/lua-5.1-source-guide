#+SETUPFILE: setup.org

* TODO lexer

** intro

从源代码到 token 的过程

字符流 到 token 流

lexer 的作用

辅助 parser 的第一步


** theory

*** regex

正则都不陌生

描述 token

匹配的优先级？
如果有相同的匹配模式？
第一人匹配的优先级？


*** DFA

*** NFA

*** relation

equal

flex 原理

将 regex 表示为代码逻辑

** lexer

lua 采用了手写的方式
更加灵活，效率更高

反而看代码更直白，用正则反而不容易描述

TODO flex 描述

从字符流的开头处，开始按规则，匹配，返回匹配的 token

一直重复这样的过程


*** token

first reserved 257
256 匹配 ascii 码字符

用 reverved 保存了相应的类型
在 llex 中还原





对数字的检测，正则检测并不完整
还使用了 strtod 的转换错误检测



*** lexstate

singleton
hold fs and f

*** =luaX_next=
    
lookahead


** lexer program

   
** practice


*** zio
    
*** mbuffer




