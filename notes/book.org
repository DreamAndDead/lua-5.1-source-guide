#+AUTHOR: DreamAndDead
#+TITLE: lua internals guide

#+LATEX_CLASS: book

* overview

章节内容
- 模块的实现原理
- 图解关键数据结构
- 图解关键实现过程
- 非核心部分作为章节阅读任务

#+INCLUDE: "./overview.org"
  
* a small example

把编程语言也看作一个程序，接收源码字符串，并实现约定描述的功能
from source code to result

graph it!

sample code

from start to result

the whole process

* how to read

** source structure

lua source itself

reading project how to use

where I modified the source code


** toolchain

gcc

gdb

gdb script

* object

lua 基础的 8 种数据类型

** nil

** bool

** number

** string

** table

hash
array

metatable

** function

c func

lua func (closure?)

** userdata

c memory


light

heavy

** thread

later

* compiler

** lexer

*** token

*** regex & DFA & NFA

*** lexstate

zio

mbuffer

lexstate

*** token with gdb script (practice)

** parser

*** EBNF

*** LL(1)

*** caveats

binop 优先级

没有按照 EBNF 来命名

** bytecode

opcode and oprand

*** proto

*** dump & undump

** generate

*** opcode detail

*** var type (local upval global)

*** allocate stack for local var

*** key statement insight

**** for
     
blockCnt

do end block and break

chunk is not block
    
**** function

upval


* interprete

** vm

*** closure

*** lua_State

*** callinfo

*** stack

*** upval

open and close

** thread (coroutine)

** c api

c <-> stack <-> lua

*** c & stack

*** lua & stack

* gc

** gc object

** algorithm

* debug

hooks

* package module

- std lib
- dynamic load


* error handling

- protected call
- longjump





